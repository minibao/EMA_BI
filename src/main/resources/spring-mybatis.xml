<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:util="http://www.springframework.org/schema/util"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util-3.2.xsd">

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:conf.properties"/>
	</bean>

	<bean id="multipleDataSource" class="org.apache.commons.dbcp.BasicDataSource"  destroy-method="close">
       	<property name="driverClassName" value="${jdbc_driverClassName}"/>
       	<property name="url" value="${jdbc_url}"/>
    	<property name="username" value="${jdbc_username}"/>
    	<property name="password" value="${jdbc_password}"/>
    	<property name="maxActive" value="${jdbc_maxActive}"/>
    	<property name="initialSize" value="${jdbc_initialSize}"/>
    	<property name="maxWait" value="${jdbc_maxWait}"/>
    	<property name="minIdle" value="${jdbc_minIdle}"/>
	    <!-- 自动清除无用连接 -->
	    <property name="removeAbandoned" value="true"/>
	    <!-- 清除无用连接的等待时间 -->
	    <property name="removeAbandonedTimeout" value="180"/>
	    <!-- 连接属性 -->
	    <property name="connectionProperties" value="clientEncoding=UTF-8"/>
    </bean>


 <!-- configLocation为mybatis属性 mapperLocations为所有mapper-->
	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="multipleDataSource"/>
		<property name="mapperLocations">
			<list>
				<value>classpath:mapper/*Mapper.xml</value>
			</list>
		</property>
		<property name="configLocation" value="classpath:mybatis-typeAlias.xml"/>
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"/>
	</bean>

 	<!-- spring与mybatis整合配置，扫描所有dao -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
	    p:basePackage="com.gmtool.dao" 
	    p:sqlSessionFactoryBeanName="sqlSessionFactory"/>
	
	<!-- 事务管理器 -->  
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
	        <property name="dataSource" ref="multipleDataSource" />
	</bean>  
	
	 <!-- 事务注解驱动，标注@Transactional的类和方法将具有事务性 -->  
	<tx:annotation-driven transaction-manager="txManager" proxy-target-class="true" />
	
	
	
</beans>